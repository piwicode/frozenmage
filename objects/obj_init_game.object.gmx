<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Pixel art parameters.
global.game_res_height = 200;
global.game_res_width = 320;
global.game_res_scale = 4;

// Capture the monitor resolution for scaling.
global.monitor_width = display_get_width();
global.monitor_height = display_get_height();

// Set the window size.
window_set_size(
  global.game_res_width * global.game_res_scale,
  global.game_res_height * global.game_res_scale)

if(false) { // Deactivate bugy rescaling code.
  var scaled_width = 0;
  var scaled_height = 0;
  if (global.game_res_width * global.monitor_height &lt;  global.monitor_height * global.monitor_width) {
    scaled_width = global.monitor_width;
    scaled_height = global.game_res_height * global.monitor_width / global.game_res_width;
  } else {
    scaled_width = global.game_res_width * global.monitor_height / global.game_res_height;
    scaled_height =  global.monitor_height;
  }
  application_surface_draw_enable(false);
  
  surface_resize(application_surface, scaled_width, scaled_height)
  global.Xoffset=(global.monitor_width - scaled_width) / 2;
  global.Yoffset=(global.monitor_height - scaled_height) / 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Full screen when F11 is pressed.
if (keyboard_check_pressed(vk_f11)) {
  var is_fullscreen = !window_get_fullscreen();  // Toggle fullscreen.
  window_set_fullscreen(is_fullscreen);
  window_set_cursor(IIF(is_fullscreen, cr_none, cr_default));
}

// Exit the game when ALT + F4 is pressed.
if (keyboard_check_pressed(vk_f4) &amp;&amp; keyboard_check(vk_alt)) {
   game_end();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="77">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// This code is innqctive becqsue this instance is not visible.
draw_surface_ext(application_surface, global.Xoffset, global.Yoffset, 1, 1, 0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
