<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_obj_talk</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>text = "TO_BE_DEFINED";
duration_sec = 10;
remaining_time = 0;
has_talked = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!has_talked &amp;&amp; place_meeting(x, y, obj_mage)) {
  has_talked = 1;
  remaining_time = duration_sec * room_speed;
}

remaining_time = Approach(remaining_time, 0, 1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(remaining_time) {
  var margin = 4 * PIXEL_SIZE;  // in pixels.
  var face_width = sprite_get_width (sp_dlg_mage) * PIXEL_SIZE;
  var x_padding = sprite_get_bbox_left(sp_dlg_parchment) * PIXEL_SIZE;
  var y_padding = sprite_get_bbox_top(sp_dlg_parchment) * PIXEL_SIZE;
 
  draw_sprite_ext(
    sp_dlg_mage, 0 /*image index*/,
    margin, margin, /*position*/
    PIXEL_SIZE, PIXEL_SIZE /*scale*/,
    0 /*rotation angle*/, c_white /*blend color*/, 1 /*alpha*/);

  draw_sprite_ext(
    sp_dlg_parchment, 0 /*image index*/,
    face_width + 2 * margin, margin, /*position*/
    PIXEL_SIZE, PIXEL_SIZE /*scale*/,
    0 /*rotation angle*/, c_white /*blend color*/, 1 /*alpha*/);

  draw_set_font(fnt_arial);
  draw_set_colour(c_black);
  draw_set_alpha(.95);
  draw_set_halign(fa_left);
  draw_set_valign(fa_top);
  draw_text_transformed(
    face_width + 2 * margin + x_padding, margin + y_padding,
    other.text,
    PIXEL_SIZE, PIXEL_SIZE /*scale*/,
    0 /*rotation angle*/);  
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
